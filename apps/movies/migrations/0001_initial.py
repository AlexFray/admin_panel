# Generated by Django 4.2.5 on 2024-02-08 17:31

import uuid

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Filmwork",
            fields=[
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("title", models.CharField(default=None, max_length=255, verbose_name="Title")),
                ("description", models.TextField(blank=True, verbose_name="Description")),
                ("creation_date", models.DateField(verbose_name="Premier")),
                (
                    "rating",
                    models.FloatField(
                        blank=True,
                        default=0.0,
                        validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)],
                        verbose_name="Rating",
                    ),
                ),
                ("type", models.CharField(choices=[("movie", "Movie"), ("tv_show", "TV show")], default="movie", verbose_name="Type")),
            ],
            options={
                "verbose_name": "Movie",
                "verbose_name_plural": "Movies",
                "db_table": 'content"."film_work',
            },
        ),
        migrations.CreateModel(
            name="Genre",
            fields=[
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255, verbose_name="Name")),
                ("description", models.TextField(blank=True, verbose_name="Description")),
            ],
            options={
                "verbose_name": "Genre",
                "verbose_name_plural": "Genres",
                "db_table": 'content"."genre',
            },
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("full_name", models.CharField(max_length=255, verbose_name="Full Name")),
            ],
            options={
                "verbose_name": "Actor",
                "verbose_name_plural": "Actors",
                "db_table": 'content"."person',
            },
        ),
        migrations.CreateModel(
            name="PersonFilmwork",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("role", models.TextField(default=None, verbose_name="Role")),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("film_work", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="movies.filmwork")),
                ("person", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="movies.person")),
            ],
            options={
                "db_table": 'content"."person_film_work',
            },
        ),
        migrations.CreateModel(
            name="GenreFilmwork",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("film_work", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="movies.filmwork")),
                ("genre", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="movies.genre")),
            ],
            options={
                "db_table": 'content"."genre_film_work',
            },
        ),
        migrations.AddField(
            model_name="filmwork",
            name="genres",
            field=models.ManyToManyField(through="movies.GenreFilmwork", to="movies.genre"),
        ),
    ]
